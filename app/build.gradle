/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

javafx {
    version = '21.0.5'
    modules = ['javafx.controls', 'javafx.fxml']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
//    sqlite and hibernate
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.43.2.1'
    implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.3.1.Final'
    implementation group: 'org.hibernate.orm', name: 'hibernate-community-dialects', version: '6.3.1.Final'
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'

    implementation 'org.jboss.logging:jboss-logging:3.5.0.Final'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'

    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.2')
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.2")
}

application {
    // Define the main class for the application.
    mainClass = 'program.MainApp'
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
